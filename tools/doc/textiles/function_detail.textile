h2. functions

h3. "index":index.html > "ES Next":es_next_detail.html > functions

関数に対する拡張です。

*無名関数*

<notextile>
<pre class="brush: js">
var a = (x,y,z) -> x + y + z,
    b = (x,y,z) -> { return x + y + z; }
</pre>
</notextile>

*変換後*

<notextile>
<pre class="brush: js">
var a = function (x,y,z) { return x + y + z;},
    b = function (x,y,z) { return x + y + z;}
</pre>
</notextile>

*関数宣言*

<notextile>
<pre class="brush: js">
foo(x,y,z) -> x + y + z;
bar(x,y,z) -> { return x + y + z; }
</pre>
</notextile>

*変換後*

<notextile>
<pre class="brush: js">
function foo (x,y,z) { return x + y + z;}
function bar (x,y,z) { return x + y + z;}
</pre>
</notextile>

*コンテキストの束縛*

<notextile>
<pre class="brush: js">
var a = (x,y,z) => x + y + z,
    b = (x,y,z) => { return x + y + z; }
foo(x,y,z) => console.log(this);
bar(x,y,z) => {console.log(this) }
</pre>
</notextile>

*変換後*

<notextile>
<pre class="brush: js">
var a = function (x,y,z) { return x + y + z; }.bind(this),
    b = function (x,y,z) { return x + y + z; }.bind(this);
function foo (x,y,z) { return console.log(_mochaLocalTmp0);}
foo = foo.bind(this);
function bar (x,y,z) { return console.log(_mochaLocalTmp1);}
bar = bar.bind(this);
</pre>
</notextile>
