import os, sys
root_dir = os.path.dirname(File('SConscript').rfile().abspath + '/../../../../')
sys.path.insert(0, os.path.join(root_dir, 'tools/scons_helper'))
from platform_utils import Config
from test import TestBuilder
Import('CURRENT')
Import('ENV')
Import('CONFIG')
Import('LIB_PREFIX')
ROOT = os.getcwd().replace('\\', '/')
TEST_CONFIG = CONFIG.Copy()
TEST_CONFIG.Extend({
        "linux" : {
            'RELEASE' : '`icu-config --ldflags`',
            "DEBUG" : '`icu-config --ldflags`',
            "LD_FLAGS" : "",
            "LIBS" : ['pthread'],
            "EXCLUDE_FILES" : [],
            "DEPENDS" : ['../../platform/thread/thread-posix.cc',
                         '../../platform/utils/utils-posix.cc']
            },
        'macos' : {
            "LD_FLAGS" : "",
            "LIBS" : [],
            "STATIC_LIBS" : [],
            "EXCLUDE_FILES" : [],
            "STATIC_LIBS" : [LIB_PREFIX + '/lib-osx/libicui18n.a', LIB_PREFIX + '/lib-osx/libicuio.a', LIB_PREFIX + '/lib-osx/libiculx.a', LIB_PREFIX + '/lib-osx/libicudata.a', LIB_PREFIX + '/lib-osx/libicuuc.a', LIB_PREFIX + '/lib-osx/libicule.a'],
            "DEPENDS" : ['../../platform/thread/thread-posix.cc',
                         '../../platform/utils/utils-posix.cc']
            },
        "win32" : {
            "LD_FLAGS" : "/NOLOGO /MACHINE:X86 /LTCG",
            "LIBS" : [LIB_PREFIX + '/lib-win32/icuin.lib', LIB_PREFIX + '/lib-win32/icudt.lib', LIB_PREFIX + '/lib-win32/icuuc.lib'],
            "EXCLUDE_FILES" : [],
            "DEPENDS" : ['../../platform/thread/thread-win32.cc',
                         '../../platform/utils/utils-win32.cc']
            }
        })

TEST_CONFIG.set_base(ROOT)
builder = TestBuilder(ARGUMENTS.get('mode'), ['ut.cc',
                                              '../binding/parser_connector.cc',
                                              '../tokens/js_token.cc',
                                              '../tokens/token_info.cc',
                                              'encoding/encoding.cc',
                                              'scanner.cc',
                                              'source_stream.cc',
                                              'token_stream.cc',
                                              '../nexc.cc',
                                              '../loader/loader.cc',
                                              '../../memory/pool.cc',
                                              '../../platform/fs/stat/stat.cc',
                                              '../../utils/error_reporter.cc',
                                              '../events/io_event/io_event.cc'], ENV, TEST_CONFIG)
builder.Build(CURRENT + '/src', ROOT)

